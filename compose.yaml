services:
  # Creates ./speech.env on the host before other services start
  init-env:
    image: alpine:3.20
    working_dir: /work
    volumes:
      - ./:/work
    command: >
      sh -c 'if [ ! -f speech.env ]; then
        if [ -f sample.env ]; then
          cp sample.env speech.env;
          echo "Copied sample.env to speech.env";
        else
          echo "# Auto-created by compose init" > speech.env;
          echo "# Add values like: MUX_TOKEN_ID=value" >> speech.env;
          echo "Created placeholder speech.env";
        fi
      else
        echo "speech.env already exists; leaving it unchanged";
      fi'
    restart: "no"

  #create ollama with GPU Support
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    volumes:
      - ollama-data:/root/.ollama
    ports:
      - "11434:11434"

    restart: unless-stopped
    #recommend pulling in this model for working stack but not enabled by default
    #entrypoint: >
      #sh -c "
      #(
       # echo 'Pulling model...';
       # ollama serve --cors
       #ollama pull gpt-oss:20b;
       #echo 'Warming up model...';
       #ollama run gpt-oss:20b 'Hello' > /dev/null;
      #) &
      #ollama serve
      #"
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 10s

  #create open-webui with gpu support
  open-webui:
    image: ghcr.io/open-webui/open-webui:latest
    container_name: open-webui
    depends_on:
      - ollama
      - init-env
    ports:
      - "3000:8080"
    env_file:
      - ./speech.env
    volumes:
      - open-webui-data:/app/backend/data
    restart: unless-stopped

  mcpo:
    image: ghcr.io/open-webui/mcpo:latest
    container_name: mcpo
    ports:
      - "8001:8001"
    volumes:
      - ./mcpo_config.json:/app/mcpo/config.json
    command: mcpo --port 8001 --config /app/mcpo/config.json --api-key=horses99x>
    env_file:
      - ./speech.env
    environment:
      - LOG_LEVEL=info
    depends_on:
      - init-env
    restart: unless-stopped

  speaches:
    image: ghcr.io/speaches-ai/speaches:latest-cpu
    restart: unless-stopped
    ports:
      - 8000:8000
    build:
      args:
        BASE_IMAGE: ubuntu:24.04

volumes:
  ollama-data:
  open-webui-data:
  voices:
  config:
